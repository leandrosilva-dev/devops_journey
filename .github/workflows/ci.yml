name: CI Pipeline - Develop branch

on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - develop

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          cd app/
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Unit Tests
        run: |
          cd app/
          pytest test_app.py

      - name: Run Integration Tests
        env:
          APP_BASE_URL: http://localhost:5000
        run: |
          # Start the Flask app in the background for integration tests
          # We use gunicorn as specified in Dockerfile CMD
          gunicorn --bind 0.0.0.0:5000 app:app &
          # Wait for the app to be ready (you might use a more robust health check in production)
          sleep 5
          pytest integration_test.py

      - name: Build and Push Docker Image
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          IMAGE_NAME: ${{ secrets.DOCKER_USERNAME }}/devops-journey
          IMAGE_TAG: ${{ github.sha }}
        run: |
          echo "--- Building Docker Image ---"
          docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
          docker build -t $IMAGE_NAME:$IMAGE_TAG .
          docker push $IMAGE_NAME:$IMAGE_TAG
          echo "Docker image $IMAGE_NAME:$IMAGE_TAG pushed successfully."